declare type eventCodeType = 'Pause' | 'Backspace' | 'Tab' | 'NumLock' | 'Enter' | 'ShiftLeft' | 'ControlLeft' | 'AltLeft' | 'Pause' | 'CapsLock' | 'Lang1' | 'Lang2' | 'Escape' | 'Space' | 'Numpad9' | 'Numpad3' | 'Numpad1' | 'Numpad7' | 'ArrowLeft' | 'ArrowUp' | 'ArrowRight' | 'ArrowDown' | 'F13' | 'Numpad0' | 'NumpadDecimal' | 'Digit0' | 'Digit1' | 'Digit2' | 'Digit3' | 'Digit4' | 'Digit5' | 'Digit6' | 'Digit7' | 'Digit8' | 'Digit9' | 'Period' | 'Semicolon' | 'Backquote' | 'Equal' | 'Minus' | 'KeyA' | 'KeyB' | 'KeyC' | 'KeyD' | 'KeyE' | 'KeyF' | 'KeyG' | 'KeyH' | 'KeyI' | 'KeyJ' | 'KeyK' | 'KeyL' | 'KeyM' | 'KeyN' | 'KeyO' | 'KeyP' | 'KeyQ' | 'KeyR' | 'KeyS' | 'KeyT' | 'KeyU' | 'KeyV' | 'KeyW' | 'KeyX' | 'KeyY' | 'KeyZ' | 'MetaLeft' | 'MetaRight' | 'ContextMenu' | 'Numpad0' | 'Numpad1' | 'Numpad2' | 'Numpad3' | 'Numpad4' | 'Numpad5' | 'Numpad6' | 'Numpad7' | 'Numpad8' | 'Numpad9' | 'NumpadMultiply' | 'NumpadAdd' | 'NumpadDecimal' | 'NumpadSubtract' | 'NumpadDecimal' | 'NumpadDivide' | 'F1' | 'F2' | 'F3' | 'F4' | 'F5' | 'F6' | 'F7' | 'F8' | 'F9' | 'F10' | 'F11' | 'F12' | 'F13' | 'F14' | 'F15' | 'F16' | 'F17' | 'F18' | 'F19' | 'F20' | 'F21' | 'F22' | 'F23' | 'F24' | 'F25' | 'F26' | 'F27' | 'F28' | 'F29' | 'F30' | 'F31' | 'F32' | 'NumLock' | 'ScrollLock' | 'BracketLeft' | 'BracketRight' | 'Backquote' | 'Backslash' | 'Quote' | 'Minus' | 'Backslash' | 'BracketRight' | 'Minus' | 'MediaTrackNext' | 'MediaTrackPrevious' | 'VolumeMute' | 'VolumeDown' | 'VolumeUp' | 'Semicolon' | 'Equal' | 'Comma' | 'Minus' | 'Period' | 'Slash' | 'Backquote' | 'IntlRo' | 'NumpadComma' | 'BracketLeft' | 'Backslash' | 'BracketRight' | 'Quote' | 'Backquote' | 'OSLeft' | 'AltRight' | 'IntlBackslash' | 'WakeUp';
declare const keyrios: {
    exists: (id: string) => boolean;
    get: (id: string) => eventCodeType;
    set: (id: string, key: eventCodeType) => void;
    flicker: (keybind: eventCodeType, onkeydown: () => {}, onkeyup: () => {}, keybindId?: string) => () => void;
};
export default keyrios;
